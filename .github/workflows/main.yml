name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Make these available to jobs (raw, from secrets)
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build app (vite)
        run: npm run build

  deploy:
    name: Deploy to Vercel (prod)
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Trim any stray CR/LF or spaces from IDs coming from Secrets
      - name: Sanitize Vercel IDs
        run: |
          echo "VERCEL_ORG_ID=$(echo '${{ secrets.VERCEL_ORG_ID }}' | tr -d '\r\n ')" >> $GITHUB_ENV
          echo "VERCEL_PROJECT_ID=$(echo '${{ secrets.VERCEL_PROJECT_ID }}' | tr -d '\r\n ')" >> $GITHUB_ENV

      - name: Pull Vercel env (production)
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build with Vercel (prebuilt output)
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy prebuilt output to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
