name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build app (vite)
        run: npm run build

  # ðŸš€ Preview deploy on PRs
  preview_deploy:
    name: Deploy Preview to Vercel
    needs: ci
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write   # so we can comment the preview URL
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Link Vercel project (name + scope)
        run: vercel link --yes --project "${{ secrets.VERCEL_PROJECT_NAME }}" --scope "${{ secrets.VERCEL_SCOPE }}" --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Pull Vercel env (preview)
        run: vercel pull --yes --environment=preview --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Build with Vercel (prebuilt)
        run: vercel build --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Deploy prebuilt (preview)
        id: deploy_preview
        run: |
          url=$(vercel deploy --prebuilt --token "${{ secrets.VERCEL_TOKEN }}")
          echo "preview_url=$url" >> $GITHUB_OUTPUT
          echo "Preview URL: $url"

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = '${{ steps.deploy_preview.outputs.preview_url }}';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `âœ… Preview deployed: ${url}`
            });

  # ðŸŒŸ Production deploy on push to main
  deploy:
    name: Deploy to Vercel (prod)
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Link Vercel project (name + scope)
        run: vercel link --yes --project "${{ secrets.VERCEL_PROJECT_NAME }}" --scope "${{ secrets.VERCEL_SCOPE }}" --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Pull Vercel env (production)
        run: vercel pull --yes --environment=production --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Build with Vercel (prebuilt)
        run: vercel build --prod --token "${{ secrets.VERCEL_TOKEN }}"

      - name: Deploy prebuilt (production)
        run: vercel deploy --prebuilt --prod --token "${{ secrets.VERCEL_TOKEN }}"
